const e=require("child_process"),t=require("util"),a=require("chalk"),i=require("inquirer"),s=require("ora"),{INIT_TEXT:r}=require("../i18n"),{WritePackage:n,WritePage:o}=require("../template"),{GetVersion:p,ReadFolder:l,ShowMsg:c,ShowTitle:m}=require("../util");module.exports=async function(){m("init");const u=[{default:"demo",message:r.qaName,name:"name",type:"input",validate:e=>{return/^[a-z][0-9a-z-]*$/gi.test(e)?!l("").includes(e)||a.redBright(r.judgeExist):a.redBright(r.judgeName)}},{choices:["SPA","MPA"],default:0,message:r.qaType,name:"type",type:"list"},{default:!1,message:r.qaState,name:"state",type:"confirm"},{default:!1,message:r.qaRouter,name:"router",type:"confirm"},{default:!1,message:r.qaProps,name:"props",type:"confirm"},{default:!1,message:r.qaTs,name:"typescript",type:"confirm"},{choices:r.dependencies,message:r.qaDependence,name:"dependence",type:"checkbox"},{default:!1,message:r.qaInstall,name:"install",type:"confirm"}],d=await i.prompt(u),{dependence:y,install:g,name:f,props:q,router:h,state:w,type:b,typescript:x}=d,T=["@babel/polyfill","react","react-dom","react-hot-loader"];w&&T.push("mobx","mobx-react"),h&&T.push("react-router-dom"),q&&T.push("prop-types");const $=["node",...T].sort().filter(e=>"@babel/polyfill"!==e&&!e.includes("mobx")).map(e=>`@types/${e}`);y.reduce((e,t)=>(e.push(t.split(" ")[0]),e),T).sort();const P=b.toLowerCase().includes("mpa");if(await o(f,P,x),g){const a=s(r.installing),i=t.promisify(e.exec);a.start(),await n(f,{},{},x),await i(`cd ${f} && npm i ${T.join(" ")}${x?` && npm i -D ${$.join(" ")}`:""}`),a.stop(),c("green",r.installed)}else{const e=s(r.obtaining);e.start();const t=await p(T),a=x?await p($):{};await n(f,t,a,x),e.stop(),c("yellow",r.obtained)}};